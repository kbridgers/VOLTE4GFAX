align mips board code to other archs:
- use common display_options()
- add call to status_led_set() into board_init_r()
- use bi_memsize to give size to Linux, allows different memory size
  for u-boot (e.g. internal) and Linux (external SDRAM)

diff --git a/arch/mips/lib/board.c b/arch/mips/lib/board.c
--- a/arch/mips/lib/board.c
+++ b/arch/mips/lib/board.c
@@ -83,13 +83,6 @@ static int init_func_ram(void)
 	return 1;
 }
 
-static int display_banner(void)
-{
-
-	printf("\n\n%s\n\n", version_string);
-	return 0;
-}
-
 #ifndef CONFIG_SYS_NO_FLASH
 static void display_flash_config(ulong size)
 {
@@ -137,7 +130,7 @@ init_fnc_t *init_sequence[] = {
 	init_baudrate,		/* initialize baudrate settings */
 	serial_init,		/* serial communications setup */
 	console_init_f,
-	display_banner,		/* say that we are here */
+	display_options,	/* say that we are here */
 	checkboard,
 	init_func_ram,
 	NULL,
@@ -260,11 +253,15 @@ void board_init_r(gd_t *id, ulong dest_a
 	extern char *env_name_spec;
 #endif
 	bd_t *bd;
+	ulong malloc_start;
 
 	gd = id;
 	gd->flags |= GD_FLG_RELOC;	/* tell others: relocation done */
 
-	debug("Now running in RAM - U-Boot at: %08lx\n", dest_addr);
+	/* The Malloc area is immediately below the monitor copy in DRAM */
+	malloc_start = dest_addr - TOTAL_MALLOC_LEN;
+
+	printf ("Now running in RAM - U-Boot at: %08lx\n", dest_addr);
 
 	gd->reloc_off = dest_addr - CONFIG_SYS_MONITOR_BASE;
 
@@ -285,10 +282,10 @@ void board_init_r(gd_t *id, ulong dest_a
 
 	bd = gd->bd;
 
-	/* The Malloc area is immediately below the monitor copy in DRAM */
-	mem_malloc_init(CONFIG_SYS_MONITOR_BASE + gd->reloc_off -
-			TOTAL_MALLOC_LEN, TOTAL_MALLOC_LEN);
+	mem_malloc_init(malloc_start, TOTAL_MALLOC_LEN);
+#ifndef CONFIG_RELOC_FIXUP_WORKS
 	malloc_bin_reloc();
+#endif
 
 #ifndef CONFIG_SYS_NO_FLASH
 	/* configure available FLASH banks */
@@ -336,6 +333,10 @@ void board_init_r(gd_t *id, ulong dest_a
 	console_init_r();
 /** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** **/
 
+#if defined(CONFIG_STATUS_LED) && defined(STATUS_LED_BOOT)
+	status_led_set (STATUS_LED_BOOT, STATUS_LED_BLINKING);
+#endif
+
 	/* Initialize from environment */
 	load_addr = getenv_ulong("loadaddr", 16, load_addr);
 #if defined(CONFIG_CMD_NET)
diff --git a/arch/mips/lib/bootm.c b/arch/mips/lib/bootm.c
--- a/arch/mips/lib/bootm.c
+++ b/arch/mips/lib/bootm.c
@@ -66,11 +66,11 @@ int do_bootm_linux(int flag, int argc, c
 	linux_params_init (UNCACHED_SDRAM (gd->bd->bi_boot_params), commandline);
 
 #ifdef CONFIG_MEMSIZE_IN_BYTES
-	sprintf (env_buf, "%lu", (ulong)gd->ram_size);
-	debug ("## Giving linux memsize in bytes, %lu\n", (ulong)gd->ram_size);
+	sprintf (env_buf, "%lu", (ulong)gd->bd->bi_memsize);
+	debug ("## Giving linux memsize in bytes, %lu\n", (ulong)gd->bd->bi_memsize);
 #else
-	sprintf (env_buf, "%lu", (ulong)(gd->ram_size >> 20));
-	debug ("## Giving linux memsize in MB, %lu\n", (ulong)(gd->ram_size >> 20));
+	sprintf (env_buf, "%lu", (ulong)(gd->bd->bi_memsize >> 20));
+	debug ("## Giving linux memsize in MB, %lu\n", (ulong)(gd->bd->bi_memsize >> 20));
 #endif /* CONFIG_MEMSIZE_IN_BYTES */
 
 	linux_env_set ("memsize", env_buf);
