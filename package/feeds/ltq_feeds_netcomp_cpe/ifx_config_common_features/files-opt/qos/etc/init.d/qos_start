#!/bin/sh
# 000001:tc.chen 2005/06/07 add 802.1p and ip ptos support. initial version
# 507141:tc.chen 2005/07/14 add netfilter module enable/disable code 
# 508102:tc.chen 2005/08/10 fix virtual server min bandwidth does not work when IP PTOS disable
# 508221:linmars fix TOS issue

if [ ! "$ENVLOADED" ]; then
	if [ -r /etc/rc.conf ]; then
		 . /etc/rc.conf 2> /dev/null
		ENVLOADED="1"
	fi
fi

if [ ! "$CONFIGLOADED" ]; then
	if [ -r /etc/rc.d/config.sh ]; then
		. /etc/rc.d/config.sh 2>/dev/null
		CONFIGLOADED="1"
	fi
fi


# totol downstream bandwidth in Kbites
DOWNSTREAM_RATE="`/usr/sbin/get_adsl_rate 1`"
DOWNSTREAM_IF="imq0"

LOCAL_OUT_IF="imq1"

# total upstream bandwidth in Kbites
UPSTREAM_RATE="`/usr/sbin/get_adsl_rate 0`"
UPSTREAM_IF="imq2"

# Ration in %
BANDWIDTH_RATIO=80
DOWNSTREAM_RATE=$(( $DOWNSTREAM_RATE \* $BANDWIDTH_RATIO / 100 ))
UPSTREAM_RATE=$(( $UPSTREAM_RATE \* $BANDWIDTH_RATIO / 100 ))

TC="/usr/sbin/tc"
IPTABLES="/usr/sbin/iptables"

insmod imq numdevs=3

if [ "$DOWNSTREAM_RATE" -eq "0" ]; then
	DOWNSTREAM_RATE="28000"
fi
if [ "$UPSTREAM_RATE" -eq "0" ]; then
	UPSTREAM_RATE="1300"
fi

#------------------- upstream -------------------------

#
#			QOS Tree
#   +-----------------------------------------------------+
#   |                      root 1:0 htb	                  |
#   +-----------------------------------------------------+
#	 	                |
#   +-----------------------------------------------------+
#   |                         1:1 htb		          |
#   +-----------------------------------------------------+
#	      |			|
#   +-------------------------+  +------------------------+
#   |       1:2 htb (VS)      |  | 1:3 htb(Precedence TOS)|
#   +-------------------------+  +------------------------+
# 	  |            |	              |
#   +----------+  +-----------+  +------------------------+
#   | 1:21(htb)|..| 1:2N(htb) |  |          3:0 prio      |
#   +----------+  +-----------+  +------------------------+
# 	  |             |	      |              |
#   +----------+  +----------+   +----------+  +----------+
#   |210(pfif0)|..|2N0(pfifo)|   |3:1(prio) |..| 3:8(prio)|
#   +----------+  +----------+   +----------+  +----------+
#				      |              |
#				 +----------+  +----------+
#				 |310(pfifo)|..|380(pfifo)|
#				 +----------+  +----------+
#
# clear existing qdiscs
	TC_CLASS_ADD="$TC class add dev $UPSTREAM_IF parent "
	TC_QDISC_ADD="$TC qdisc add dev $UPSTREAM_IF parent"
	TC_FILTER_ADD="$TC filter add dev $UPSTREAM_IF parent 1: protocol ip"

# create qdisk tree
/usr/sbin/status_oper SET qos status initiating

        ${TC} qdisc add dev ${UPSTREAM_IF} root handle 1: htb default 3

        ${TC_CLASS_ADD} 1: classid 1:1 htb rate ${UPSTREAM_RATE}kbit

	# for voip or some high priority packets
        if [ "$DIFFSERV_VIRTUAL_SERVER" = "1" ]; then
                i=1

		# calculate Virtual Server minimum bandwidth and other bandwidth
                vs_min_bandwidth=0
                while [ "$i" -ge 1 -a "$i" -le $NATVS_NUM ]
                do
                        eval NATVS_MIN_BW='$NATVS_MIN_BW'${i}
                        eval NATVS_F='$NATVS_F'${i}
                        eval NATVS_QOS_ENABLE='$NATVS_QOS_ENABLE'${i}
                        if [ "$NATVS_F" = "1" -a "$NATVS_QOS_ENABLE" = "1" ]; then
                                vs_min_bandwidth=$(( $vs_min_bandwidth + $NATVS_MIN_BW ))
                        fi
                        i=$(( $i + 1 ))
		done

                others_bandwidth=$(( 100 - $vs_min_bandwidth ))
                others_bandwidth=$(( $UPSTREAM_RATE \* $others_bandwidth / 100 ))
		vs_min_bandwidth=$(( $UPSTREAM_RATE \* $vs_min_bandwidth / 100 ))

		# create 1:2 class for virtual server services
        	${TC_CLASS_ADD} 1:1  classid 1:2 htb rate ${vs_min_bandwidth}kbit ceil ${UPSTREAM_RATE}kbit prio 3 

                i=1
                ${IPTABLES} -t mangle -F QOS_VS 
                while [ "$i" -ge 1 -a "$i" -le $NATVS_NUM ]
                do
                        eval NATVS_F='$NATVS_F'${i}
                        eval NATVS_QOS_ENABLE='$NATVS_QOS_ENABLE'${i}
                        eval NATVS_MIN_BW='$NATVS_MIN_BW'${i}
                        eval NATVS_MAX_BW='$NATVS_MAX_BW'${i}
                        if [ "$NATVS_F" = "1" -a "$NATVS_QOS_ENABLE" = "1" ]; then
                                LAN_CLASS_ID=$(( $i + 20 ))
                                NATVS_MIN_BW=$(( $UPSTREAM_RATE \* $NATVS_MIN_BW / 100 ))
                                NATVS_MAX_BW=$(( $UPSTREAM_RATE \* $NATVS_MAX_BW / 100 ))
                        	eval NATVS_PIP='$NATVS_PIP'${i}
                        	eval NATVS_PTYPE='$NATVS_PTYPE'${i}
                        	eval NATVS_PPORT='$NATVS_PPORT'${i}
                                ${TC_CLASS_ADD} 1:2 classid 1:${LAN_CLASS_ID} htb rate ${NATVS_MIN_BW}kbit ceil ${NATVS_MAX_BW}kbit cburst 10500 quantum 3000
                                ${TC_QDISC_ADD} 1:${LAN_CLASS_ID} handle ${LAN_CLASS_ID}0: pfifo limit 20
                                ${TC_FILTER_ADD} handle "$(( $i \* 16 + 8 ))" fw classid 1:${LAN_CLASS_ID}
                                ${IPTABLES} -t mangle -A QOS_VS -s ${NATVS_PIP} -p ${NATVS_PTYPE} --sport ${NATVS_PPORT} -j MARK --set-mark "$(( $i \* 16 + 8 ))"
                        fi
                        i=$(( $i + 1 ))
                done
	else
                others_bandwidth="$UPSTREAM_RATE"
        fi

#508102:tc.chen
	${TC_CLASS_ADD} 1:1  classid 1:3 htb rate ${others_bandwidth}kbit ceil ${UPSTREAM_RATE}kbit prio 4 quantum 1500 burst 10500

	if [ "$CONFIG_FEATURE_QOS_PRIORITY_QUEUE" = "1" ]; then
            if [ "$QOS_PRIO" = "1" ]; then
	
#508102:tc.chen ${TC_CLASS_ADD} 1:1  classid 1:3 htb rate ${others_bandwidth}kbit ceil ${UPSTREAM_RATE}kbit prio 4 quantum 1500 burst 10500

		# for tos precedence qos
		${TC_QDISC_ADD} 1:3 handle 3: prio bands 8 priomap 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7

		${TC_QDISC_ADD} 3:1 handle 10: pfifo 
		${TC_QDISC_ADD} 3:2 handle 20: pfifo 
		${TC_QDISC_ADD} 3:3 handle 30: pfifo
		${TC_QDISC_ADD} 3:4 handle 40: pfifo 
		${TC_QDISC_ADD} 3:5 handle 50: pfifo 
		${TC_QDISC_ADD} 3:6 handle 60: pfifo 
		${TC_QDISC_ADD} 3:7 handle 70: pfifo 

		${TC_QDISC_ADD} 3:8 handle 80: pfifo 

		TC_FILTER_ADD="$TC filter add dev $UPSTREAM_IF parent 3: protocol ip prio"

		if [ "$QOS_8021P" = "1" ]; then 

			## classify 802.1p packet (fw mark 1 ~7 which mark form driver)
			${TC_FILTER_ADD} 1 handle 7 fw flowid 3:1
			${TC_FILTER_ADD} 2 handle 6 fw flowid 3:2
			${TC_FILTER_ADD} 3 handle 5 fw flowid 3:3
			${TC_FILTER_ADD} 4 handle 4 fw flowid 3:4
			${TC_FILTER_ADD} 5 handle 3 fw flowid 3:5
			${TC_FILTER_ADD} 6 handle 2 fw flowid 3:6
			${TC_FILTER_ADD} 7 handle 1 fw flowid 3:7

			## classify qos packet (fw mark 8 ~ 14 which mark form user setting) and apply priority bits to 802.1p 
			${TC_FILTER_ADD} 1 handle 15 fw flowid 3:1
			${TC_FILTER_ADD} 2 handle 14 fw flowid 3:2
			${TC_FILTER_ADD} 3 handle 13 fw flowid 3:3
			${TC_FILTER_ADD} 4 handle 12 fw flowid 3:4
			${TC_FILTER_ADD} 5 handle 11 fw flowid 3:5
			${TC_FILTER_ADD} 6 handle 10 fw flowid 3:6
			${TC_FILTER_ADD} 7 handle 9 fw flowid 3:7
		fi

		## classify ip qos packet (fw mark 16 ~ 11) and do not apply priority bits to 802.1p
		${TC_FILTER_ADD} 1 handle 24 fw flowid 3:1
		${TC_FILTER_ADD} 2 handle 23 fw flowid 3:2
		${TC_FILTER_ADD} 3 handle 22 fw flowid 3:3
		${TC_FILTER_ADD} 4 handle 21 fw flowid 3:4
		${TC_FILTER_ADD} 5 handle 20 fw flowid 3:5
		${TC_FILTER_ADD} 6 handle 19  fw flowid 3:6
		${TC_FILTER_ADD} 7 handle 18  fw flowid 3:7
	    fi
	fi
	ifconfig $UPSTREAM_IF up


#------------------- downstream -------------------------
#			QOS Tree
#   +------------------------------------+
#   |            root 1:0 htb	         |
#   +------------------------------------+
#	 	      |
#   +------------------------------------+
#   |               1:1 htb	         |
#   +------------------------------------+
#	      |			|
#   +----------------+  +----------------+
#   | 1:2 htb (VOIP) |  |  1:3 (Other)   |
#   +----------------+  +----------------+
#            |		        |
#   +----------------+  +----------------+
#   |   20:  pfifo   |  |   30:  pfifo   |
#   +----------------+  +----------------+
#
	TC_CLASS_ADD="$TC class add dev $DOWNSTREAM_IF parent "
	TC_QDISC_ADD="$TC qdisc add dev $DOWNSTREAM_IF parent"
	TC_FILTER_ADD="$TC filter add dev $DOWNSTREAM_IF parent 1: protocol ip"
        if [ "$DIFFSERV_DUT_VOIP" = "1" ]; then
           # Incoming packets from WAN
                SERVICE_VOIP=10
                SERVICE_OTHERS=10
                VOICE_MIN_BW=$(( $DOWNSTREAM_RATE \* $SERVICE_VOIP / 100 ))
                VOICE_MAX_BW=$DOWNSTREAM_RATE
                VOICE_QLENGTH=50
                OTHER_MIN_BW=$(( $DOWNSTREAM_RATE \* $SERVICE_OTHERS / 100 ))
                OTHER_MAX_BW=$DOWNSTREAM_RATE
                OTHER_QLENGTH=100
                ${TC} qdisc add dev $DOWNSTREAM_IF handle 1: root htb default 3
                ${TC_CLASS_ADD} 1:0 classid 1:1 htb rate ${DOWNSTREAM_RATE}kbit
                ${TC_CLASS_ADD} 1:1 classid 1:2 htb rate ${VOICE_MIN_BW}kbit ceil ${VOICE_MAX_BW}kbit cburst 5500 quantum 3000 prio 0
                ${TC_CLASS_ADD} 1:1 classid 1:3 htb rate ${OTHER_MIN_BW}kbit ceil ${OTHER_MAX_BW}kbit cburst 10500 quantum 1500 prio 1
                ${TC_QDISC_ADD} 1:2 handle 20: pfifo limit $VOICE_QLENGTH
                ${TC_QDISC_ADD} 1:3 handle 30: pfifo limit $OTHER_QLENGTH
                ${TC_FILTER_ADD} handle 23 fw classid 1:2
                ifconfig $DOWNSTREAM_IF up
#508221:linmars
                tc qdisc add dev $LOCAL_OUT_IF handle 1: root dsmark indices 2 default_index 1
                tc class change dev $LOCAL_OUT_IF parent 1:0 classid 1:1 dsmark mask 0x0 value 0xb8
                ifconfig $LOCAL_OUT_IF up
        fi


#initial mangle  
if [ "$QOS_PRIO" = "1" -o "$DIFFSERV_VIRTUAL_SERVER" = "1" ]; then
	${IPTABLES} -t mangle -A PREROUTING -j QOS_PREROUTING
	${IPTABLES} -t mangle -A POSTROUTING -j QOS_POSTROUTING
fi
if [ "$DIFFSERV_DUT_VOIP" = "1" ]; then
        iptables -t mangle -A OUTPUT -p udp --dport 5000:6000 --sport 5000:6000 -j IMQ --todev 1
fi

/usr/sbin/status_oper SET qos status start
# 507141:tc.chen update netfilter flag to enable/disable netfilter module
/usr/sbin/naptcfg --UpdateNetfilterFlag
