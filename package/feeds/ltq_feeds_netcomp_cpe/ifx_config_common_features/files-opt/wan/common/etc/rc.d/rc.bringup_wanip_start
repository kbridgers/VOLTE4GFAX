#!/bin/sh
# 000001:tc.chen 2005/06/07 add 802.1p and ip ptos support. rewrite all of the qos scirpts
#509022:linmars 2005/09/02 vlan configuration for each interfaces
OUTPUT="/tmp/ip_start${1}"
flush_output()
{
	echo "" > "$OUTPUT"
}
remove_output()
{
	rm -f "$OUTPUT"
}
SED="/bin/sed"

if [ ! "$ENVLOADED" ]; then
	if [ -r /etc/rc.conf ]; then
		 . /etc/rc.conf 2> /dev/null
		ENVLOADED="1"
	fi
fi

if [ ! "$CONFIGLOADED" ]; then
	if [ -r /etc/rc.d/config.sh ]; then
		. /etc/rc.d/config.sh 2>/dev/null
		CONFIGLOADED="1"
	fi
fi

RESOLV_CONF="/etc/resolv.conf"

eval LAN_IFACE='$'lan_main_0_interface
eval link_type='$'wanip_${1}_linkType
eval addr_type='$'wanip_${1}_addrType
eval wan_mode='$'wanip_${1}_wanMode
eval wan_iface='$'wanip_${1}_iface
eval wanip_pcpeId='$'wanip_${1}_pcpeId

eval g_wan_phy_mode='$'wanphy_phymode
eval g_wan_tc_mode='$'wanphy_tc

# TODO - Currently enabling startFlag if dual WAN is enabled.
# But this needs to be cleaned up, such that only the desired WAN Connections are started 
# even though dual wan is enabled.

#if [ "$startFlag" = "0" ]; then
	if [ "$CONFIG_FEATURE_DUAL_WAN_SUPPORT" = "1" -a "$dw_failover_state" = "1" ]; then
		startFlag=1
	fi
#fi

# If LTE interface is not up, don't start LTE WAN interface.
if [ $wan_mode -eq 7 ] && [ ! -f "/sys/class/net/lte0/operstate" ]; then
  # echo "LTE is not started " >/dev/console
  exit 0;
fi

WAN_STATUS="`/usr/sbin/status_oper GET "WanIP${1}_IF_Info" STATUS`"
if [ -n "$addr_type" -a "$addr_type" = "1" ]; then # DHCP
	if [ -z "$WAN_STATUS" ] || [ -n "$WAN_STATUS" -a "$WAN_STATUS" != "CONNECTING" -a "$WAN_STATUS" != "CONNECTED" ]; then
		startFlag=1
	else
		startFlag=0
	fi
else # static or bridge
	if [ -z "$WAN_STATUS" ] || [ -n "$WAN_STATUS" -a "$WAN_STATUS" != "CONNECTED" ]; then
		startFlag=1
	else
		startFlag=0
	fi
fi
#echo "start flag for WAN [$1] is [$startFlag]"

if [ "$startFlag" = "1" ]; then

	echo "Bringup started for wan ip index $1 !!" > /dev/console
	if [ "$link_type" = "1" -o "$link_type" = "2" -o "$link_type" = "7" -o "$link_type" = "8" ]; then # EoATM or IPoATM or WANETH or WANPTM
		if [ "$addr_type" = "1" ]; then # DHCP 
			wan_type="DHCPC"
		elif [ "$addr_type" = "2" ]; then # STATIC
			wan_type="FIXED"
		elif [ "$addr_type" = "0" ]; then # EoATM Bridge Mode
			wan_type="BRIDGE"
		fi
	elif [ "$link_type" = "5" ]; then # CLIP
		wan_type="FIXED"
	else
		wan_type="UNKNOWN"
	fi

	if [ "$wan_mode" != "1" -a "$wan_mode" != "2" -a "$wan_mode" != "7" ]; then # WANMode is ADSL/VDSL ATM/PTM  LTE
		i=0
		while [ $i -lt $adsl_vcchannel_Count ]; do
			eval adsl_ch_pcpeId='$'VCChannel_${i}_pcpeId
			if [ "A$adsl_ch_pcpeId" = "A$wanip_pcpeId" ]; then
				eval encap='$'VCChannel_${i}_encap
				eval qos_mode='$'VCChannel_${i}_qos
				eval VCC_SETTING='$'VCChannel_${i}_vcc
	
				if [ "$qos_mode" = "1" ]; then
					maxpcr=0
					minpcr=0
				else
					eval maxpcr='$'VCChannel_${i}_maxpcr
					eval minpcr='$'VCChannel_${i}_minpcr
				fi
	
				eval cdv='$'VCChannel_${i}_cdv
				eval mbs='$'VCChannel_${i}_mbs
				eval scr='$'VCChannel_${i}_scr
				eval VCC_SETTING='$encap\_'$VCC_SETTING'_$qos_mode'
				if [ "$max_pcr" != "0" ]; then
					eval VCC_SETTING=$VCC_SETTING',max_pcr='$maxpcr
				fi
				if [ "$min_pcr" != "0" ]; then
					eval VCC_SETTING=$VCC_SETTING',min_pcr='$minpcr
				fi
				if [ "$scr" != "0" ]; then
					eval VCC_SETTING=$VCC_SETTING',scr='$scr
				fi
				if [ "$mbs" != "0" ]; then
					eval VCC_SETTING=$VCC_SETTING',mbs='$mbs
				fi
				if [ "$cdv" != "0" ]; then
					eval VCC_SETTING=$VCC_SETTING',cdv='$cdv
				fi
				break
			fi
			i=`expr $i + 1`
		done
	fi

	/usr/sbin/status_oper SET WanIP${1}_IF_Info STATUS CONNECTING
	flush_output

	eval nat_enable='$'wanip_${1}_NATEnable

	case "$wan_type" in
	[Ff][Ii][Xx][Ee][Dd])
		eval IFCFG_WAN="0.0.0.0"
		eval NETMASK="0.0.0.0"
		eval DEF_ROUTE="0.0.0.0"
		i=0
		eval wanip_cpeId='$'wanip_${1}_cpeId
		while [ $i -lt $wan_ipv4_Count ]; do
			eval wanv4cfg_pcpeId='$'wanipv4${wanip_cpeId}_${i}_pcpeId
			if [ "A$wanv4cfg_pcpeId" = "A$wanip_cpeId" ]; then
				eval IFCFG_WAN='$'wanipv4${wanip_cpeId}_${i}_ipAddr
				eval NETMASK='$'wanipv4${wanip_cpeId}_${i}_netmask
				eval DEF_ROUTE='$'wanipv4${wanip_cpeId}_${i}_gw
				eval IFCFG_WAN6='$'wanipv4${wanip_cpeId}_${i}_ip6Addr
				eval IFCFG_PRELEN6='$'wanipv4${wanip_cpeId}_${i}_prefixlen
				eval DEFROUTE6='$'wanipv4${wanip_cpeId}_${i}_gw6
				eval LANPREFIX6='$'wanipv4${wanip_cpeId}_${i}_lanprefix
				eval DNSV6PRI='$'wanipv4${wanip_cpeId}_${i}_dns6server1
				eval DNSV6SEC='$'wanipv4${wanip_cpeId}_${i}_dns6server2
			fi
			i=`expr $i + 1`
		done

			if [ "$wan_mode" = "0" ]; then
				if [ "$g_wan_phy_mode" = "0" -a "$g_wan_tc_mode" = "0" ]; then # ADSL and ATM
					if [ "$link_type" = "5" ]; then # CLIP
						if [ `ps | grep -c "atmarpd -b -l /dev/null"` -eq 1 ]; then
							/usr/sbin/atmarpd -b -l /dev/null
						fi
						. /etc/rc.d/create_clip_if $1 $VCC_SETTING "$IFCFG_WAN netmask $NETMASK" $DEF_ROUTE
					fi
					. /etc/rc.d/ipqos_lcp_prio_defaults $1 $VCC_SETTING #Call for LCP Prio Map script
				fi
			fi
			
			if [ "$link_type" = "2" ]; then
                       		/sbin/ifconfig $wan_iface $IFCFG_WAN netmask $NETMASK pointopoint $DEF_ROUTE
               		else
                       		/sbin/ifconfig $wan_iface $IFCFG_WAN netmask $NETMASK
               		fi

                        /sbin/ifconfig $wan_iface down &> /dev/null
                        /sbin/ifconfig $wan_iface up &> /dev/null
                        if [ "$IFCFG_WAN6" != "::" -a "z$LANPREFIX6" != "z" ]; then
                           echo "IPv6 address configured is $IFCFG_WAN6"
                           ip -6 addr add $IFCFG_WAN6/$IFCFG_PRELEN6 dev $wan_iface
                           route  -A inet6 add ::/0 gw ${DEFROUTE6} dev $wan_iface 2>/dev/null

                           . /etc/rc.d/bringup_wanstatus $wan_iface $IFCFG_WAN6 ip

			   ip -6 addr add ${LANPREFIX6}1/64 dev br0 2>/dev/null
                           INTF=br0
                           PREFIX=$LANPREFIX6/64
                           PLIFETIME=604800
                           VLIFETIME=2592000
                           EVENT_SRC=WAN
                           EVENT_TYPE=UP
                           SRC_INTF=$wan_iface
                           DNS1=$DNSV6PRI
                           DNS2=$DNSV6SEC
                           RLZERO=0
                           DELEGATED_PREFIX=$LANPREFIX6/64
                           . /etc/rc.d/update_and_run_radvd.sh update


                           RESOLV6="/var/resolv6.conf"
                           TEMPRESOLV6="/tmp/resolv6.conf"
                           NEWRESOLV6="/tmp/new.conf"
                           > $TEMPRESOLV6
                           > $NEWRESOLV6
                           if [ "z$DNSV6PRI" != "z" ]; then
                                sed -i "/${DNSV6PRI}/d" $RESOLV6
                                echo nameserver $DNSV6PRI >> $NEWRESOLV6
                           fi
                           if [ "z$DNSV6SEC" != "z" ]; then
                                sed -i "/${DNSV6SEC}/d" $RESOLV6
                                echo nameserver $DNSV6SEC >> $NEWRESOLV6
                           fi
                           cp $RESOLV6 $TEMPRESOLV6
                           cp $NEWRESOLV6 $RESOLV6
                           cat $TEMPRESOLV6 >> $RESOLV6
                           rm $TEMPRESOLV6
                           rm $NEWRESOLV6


                           /usr/sbin/status_oper SET WanIP${1}_IF_IPv6_STATIC_Info PRELEN $IFCFG_PRELEN6 GW6 $DEFROUTE6 LANPREFIX $LANPREFIX6
                           /usr/sbin/status_oper SET "WanIP${1}_IF_IPv6_Dns" DNSv61 $DNSV6PRI DNSv62 $DNSV6SEC
                        fi

		/usr/sbin/status_oper SET WanIP${1}_IF_Info STATUS CONNECTING IP $IFCFG_WAN MASK $NETMASK
		#fi

		if [ "$CONFIG_PACKAGE_IPTABLES" = "1" -a "$nat_enable" = "1" ]; then
			/usr/sbin/naptcfg --ADDWANIF $wan_iface
		fi

		# This portion of the code is being handled in rc.bringup_wan_services_start script : Pramod
		# Default Gateway Setup
		#if [ "$DEF_ROUTE" != "0" -a $DEF_ROUTE != "..." ]; then
		#/sbin/route add default gw $DEF_ROUTE
		#fi
		/usr/sbin/status_oper SET "WanIP${1}_GATEWAY" ROUTER1 $DEF_ROUTE
		eval dns_override='$'wanip_${1}_dnsoverride
		if [ "$dns_override" = "0" ]; then # if DNS Override is disabled get the DNS Servers' IP from rc.conf
			eval file_dns='$'wanip_${1}_dnsservers
			dns_servers=`echo $file_dns | tr -s "," " "`
			count=1
			for i in $dns_servers ; do
				DNS_ARG="$DNS_ARG DNS$count $i"
				count=`expr $count + 1`
			done
			/usr/sbin/status_oper SET "WanIP${1}_DNS_SERVER" $DNS_ARG
		fi

		if [ "$wan_mode" = "1" -o "$wan_mode" = "2" ]; then #Eth WAN Mode
		 . /etc/rc.d/rc.bringup_wanip_services_start $1
		elif [ -n "`/bin/cat /tmp/adsl_status | grep "7"`" ]; then
		 . /etc/rc.d/rc.bringup_wanip_services_start $1
		fi 
		;;
	[Dd][Hh][Cc][Pp][Cc])
		if [ "$wan_mode" = "0" ]; then
				if [ "$g_wan_phy_mode" = "0" -a "$g_wan_tc_mode" = "0" ]; then # ADSL and ATM
					. /etc/rc.d/ipqos_lcp_prio_defaults $1 $VCC_SETTING #Call for LCP Prio Map script
				fi
			fi
		

		if [ "$CONFIG_PACKAGE_IPTABLES" = "1" -a "$nat_enable" = "1" ]; then
			/usr/sbin/naptcfg --ADDWANIF $wan_iface
		fi

		if [ -f /etc/rc.d/udhcpc.script ]; then
			. /etc/rc.d/init.d/udhcpc start $1
			if [ "$CONFIG_PACKAGE_KMOD_IPV6" = "1"  -a  "$ipv6_status" = "1" ]; then
				. /etc/rc.d/create_and_run_dhcp6c_cfg start $wan_iface $1 "ip"
			fi
			if [ -n "`[ -f /tmp/adsl_status ] && /bin/cat /tmp/adsl_status | grep "7"`"  -o "$wan_mode" = "1" -o "$wan_mode" = "2" ]; then

				if [ "$CONFIG_FEATURE_LED_INTERNET_RED" = "1" ]; then
					[ -f /sys/class/leds/internet_red_led/trigger ] && echo none > /sys/class/leds/internet_red_led/trigger
					[ -f /sys/class/leds/internet_red_led/brightness ] && echo 1 > /sys/class/leds/internet_red_led/brightness
				fi	
				if [ "$CONFIG_FEATURE_LED" = "1" ]; then
					[ -f /sys/class/leds/internet_led/trigger ] && echo none > /sys/class/leds/internet_led/trigger
					[ -f /sys/class/leds/internet_led/brightness ] && echo 0 > /sys/class/leds/internet_led/brightness
				fi	

			else
				if [ "$CONFIG_FEATURE_LED_INTERNET_RED" = "1" ]; then
					[ -f /sys/class/leds/internet_red_led/trigger ] && echo none > /sys/class/leds/internet_red_led/trigger
					[ -f /sys/class/leds/internet_red_led/brightness ] && echo 0 > /sys/class/leds/internet_red_led/brightness
				fi	
				if [ "$CONFIG_FEATURE_LED" = "1" ]; then
					[ -f /sys/class/leds/internet_led/trigger ] && echo none > /sys/class/leds/internet_led/trigger
					[ -f /sys/class/leds/internet_led/brightness ] && echo 0 > /sys/class/leds/internet_led/brightness
				fi	

			fi


		fi
		;;
	[Bb][Rr][Ii][Dd][Gg][Ee])
		if [ "$wan_mode" = "1" ]; then #Eth0 WAN Mode
			/usr/sbin/brctl addif ${LAN_IFACE} $wan_iface
		elif [ "$wan_mode" = "2" ]; then #Eth1 WAN Mode
			# Incase of XRX200 platforms, if VLAN Tagged Mode is not supported
			# LAN1_VLAN_ID, CPU1_VLAN_ID & WAN1_VLAN_ID are all same
			if [ "${wanphy_mii1ethVlanMode}" = "1" -a "$CONFIG_IFX_CONFIG_CPU" = "XRX288" ]; then
				# Set vlanid to LAN1_VLA_ID
				vlanid=501 #i.e LAN1_VLAN_ID

			fi
			/usr/sbin/brctl addif ${LAN_IFACE} $wan_iface
		
		elif [ "$wan_mode" = "3"  -o "$wan_mode" = "4" ]; then #PTM WAN Mode
			if [ "$g_wan_phy_mode" = "0" -o "$g_wan_phy_mode" = "3" ]; then # ADSL and PTM
				if [ "$g_wan_tc_mode" = "1" ]; then # VDSL/ADSL and PTM
					/usr/sbin/brctl addif ${LAN_IFACE} $wan_iface
				fi
			fi
    		else
			if [ "$wan_mode" = "0" ]; then #ATM WAN Mode
                               /usr/sbin/brctl addif ${LAN_IFACE} $wan_iface
                               . /etc/rc.d/ipqos_lcp_prio_defaults $1 $VCC_SETTING #Call for LCP Prio Map script
                       	fi

		fi
			/usr/sbin/status_oper SET "bringup_wanip${1}_services" status start
			ifconfig ${LAN_IFACE} > "$OUTPUT"
			WAN_IP=`"$SED" -n 's,^.*inet addr:,,; s,Bcast*.*,,;2p' "$OUTPUT"`
			WAN_MASK=`"$SED" -n 's,^.*Mask:,,1p' "$OUTPUT"`
	
			/usr/sbin/status_oper SET "WanIP${1}_IF_Info" STATUS CONNECTED IP $WAN_IP MASK $WAN_MASK
			/usr/sbin/status_oper SET "WANIP${1}_GATEWAY" ROUTER1 $WAN_IP

			# Start DNS Relay Daemon
			if  [ "$CONFIG_FEATURE_DNS_RELAY" = "1" ]; then
				. /etc/rc.d/init.d/dns_relay restart $1
			fi
			if [ "$CONFIG_FEATURE_LED_INTERNET_RED" = "1" ]; then
				[ -f /sys/class/leds/internet_red_led/trigger ] && echo none > /sys/class/leds/internet_red_led/trigger
				[ -f /sys/class/leds/internet_red_led/brightness ] && echo 0 > /sys/class/leds/internet_red_led/brightness
			fi	
			if [ "$CONFIG_FEATURE_LED" = "1" ]; then
				[ -f /sys/class/leds/internet_led/trigger ] && echo none > /sys/class/leds/internet_led/trigger
				[ -f /sys/class/leds/internet_led/brightness ] && echo 0 > /sys/class/leds/internet_led/brightness
			fi	
	

			. /etc/init.d/internet_led_control.sh "$wan_mode" "$wan_iface"
	
			# Start Dnsmasq (DNSv6 Relay) Deamon
			if [ "$CONFIG_PACKAGE_KMOD_IPV6" = "1"  -a  "$ipv6_status" = "1" ]; then
				. /etc/rc.d/bringup_dnsmasq restart $1 "ip"
			fi

			## Start VOIP Application on BRIDGE Interface ##
			#509022:linmars start
			if [ "1$CONFIG_FEATURE_VLAN" = "11" ]; then
				. /etc/rc.d/init.d/vlan start $1
			fi
			#509022:linmars end
			#000001:tc.chen start
			# santosh: 809241 start
#Manamohan: commented on 4,July 2012
#			if [ "$CONFIG_FEATURE_QOS" = "1" ]; then
#				. /etc/rc.d/init.d/qos start_wan $wan_iface
#			fi
			# santosh: 809241 end
			#000001:tc.chen end

			# IGMP Proxy/snooping in Bridged mode
    		wan_intf_idx="`echo $IGMP_WAN_INTF | sed -n 's,WAN,,;1p'`"
	    	#if [ "$IGMP_ENABLE" = "1" -a "$wan_intf_idx" = "$1" ]; then
		#		. /etc/rc.d/init.d/igmp start 
    		#fi
        if [ "$CONFIG_PACKAGE_LQ_IGMPD" = "1" ]; then
                # Check for wan_conn interface in the upstream_wan variable of rc.conf
                echo $mcast_upstream_wan | grep $wan_conn >&- 2>&-
                if [ $? -eq 0 ]; then
                        . /etc/rc.d/init.d/igmpd wan_restart
                fi
        fi

 		if [ "1$CONFIG_FEATURE_IFX_VOIP" = "11" ]; then
			if [ "$CONFIG_IFX_MODEL_NAME" = "ARX182_GW_EL_FXS_DECT" ]; then
				dect_fw_status=`/usr/sbin/status_oper GET "dect_fw" "status"`
        			if [ -n "$dect_fw_status" -a "$dect_fw_status" = "init" ]; then
         				/etc/rc.d/rc.bringup_voip_start $1 "ip" &
        			fi
			else
				/etc/rc.d/rc.bringup_voip_start $1 "ip" &
			fi 
		fi
	
	        # call mgmt.sh for web mgmt traffic prioritization
    	    if [ -n "${WEB_WAN_ENABLE}" -a "${WEB_WAN_ENABLE}" = "1" ]; then
        	    . /etc/rc.d/mgmt.sh start 0 ${WAN_IP} 80 tcp
        	    . /etc/rc.d/mgmt.sh start 0 ${WAN_IP} 443 tcp
	        fi
			# PPA config
		if [ "1$CONFIG_FEATURE_PPA_SUPPORT" = "11" ]; then
			. /etc/rc.d/ppa_config.sh addwan $wan_iface
		fi
		;;
	[Tt][Rr][0][3][78])
		if [ -r /usr/sbin/ilmid ]; then
			if [ $TR037_PROTO = "PPPOA" ]; then
				/sbin/modprobe.sh pppoatm
			fi
			if [ $TR037_PROTO = "BR2684" ]; then
				/sbin/modprobe.sh br2684
			fi
			/usr/sbin/ilmid &
		fi
		;;
	*)
		WAN_TYPE="unknown"
		;;
	esac

	if [ "$WAN_TYPE" != "unknown" ]; then
		/usr/sbin/status_oper SET bringup_wanip$1_if status start	
	    if [ "$CONFIG_PACKAGE_IFX_OAM" = "1" ]; then
				 . /etc/init.d/oam stop
 	       . /etc/init.d/oam start "IP" $1
   		fi
	else
		/usr/sbin/status_oper SET WanIP${1}_IF_Info STATUS DISCONNECT
	fi

	if [  "$PR_STATUS" = "1" ]; then
		. /etc/rc.d/init.d/policy_routing start
	fi

	remove_output
	#/usr/sbin/status_oper SET "http_wan_vcc_select" "WAN_VCC" "1"

else

	echo "WAN PPP connection $1 is already UP !!" > /dev/console
fi

#IPQOS part:
#add vconfig rules to enable cos map and add iptable rules for software path when ever a new eth.x interface is added

if [ $qm_enable -eq "1" ]; then

# Add Interface classification Rule
. /etc/rc.d/get_wan_if $1 "ip"
eval iface=${WAN_IFNAME}

ebtables -t broute -L INPUT_INTF_CHECK | grep ${iface}
if [ $? -ne 0 ]; then
	ebtables -t broute -I INPUT_INTF_CHECK 1 -i ${iface} -j ACCEPT
fi

QUEUE_METHOD=`/usr/sbin/status_oper GET qos_bk queue_method`
eval wanmode='$'wanip_$1_wanMode
case "$wanphy_phymode" in
	0)
		case "$wanphy_tc" in
			0)
				#wan mode is ATM
				qIfTypeActive=$QOS_INTF_WAN_ATM;
				if [ $QUEUE_METHOD -eq 1 -o $QUEUE_METHOD -eq 5 ]; then
					eval iftype='$'wanip_$1_ifType
                   				. /etc/rc.d/get_wan_if $1 "ip"
			                   	eval iface=${WAN_IFNAME}
						isbriged=0
						eval addrType='$'wanip_$1_addrType
						if [ "$addrType" = "0" ]; then
							isbriged=1
						fi
        					iptables -t mangle -nvL POSTROUTING | grep  ${iface}
						if [ $? -ne 0 ]; then
							
							if [ $isbriged -ne 1 ]; then
       					 			iptables -t mangle -A POSTROUTING -o ${iface} -j IMQ --todev 0
							else
       								iptables -t mangle -A POSTROUTING -m physdev --physdev-out ${iface} -j IMQ --todev 0
							fi
						fi
				fi
				;;
			1)
				#wan mode is PTM
				qIfTypeActive=$QOS_INTF_WAN_PTM;
				if [ $QUEUE_METHOD -eq 1 -o $QUEUE_METHOD -eq 5 ]; then
					eval iftype='$'wanip_$1_ifType
                   				. /etc/rc.d/get_wan_if $1 "ip"
			                   	eval iface=${WAN_IFNAME}
						isbriged=0
						eval addrType='$'wanip_$1_addrType
						if [ "$addrType" = "0" ]; then
							isbriged=1
						fi
        					iptables -t mangle -nvL POSTROUTING | grep  ${iface}
						if [ $? -ne 0 ]; then
							if [ $isbriged -ne 1 ]; then
       					 			iptables -t mangle -A POSTROUTING -o ${iface} -j IMQ --todev 0
							else
       								iptables -t mangle -A POSTROUTING -m physdev --physdev-out ${iface} -j IMQ --todev 0
							fi
						fi
				fi
				;;
		esac
		;;
	1)
		#wan mode is MII0
		qIfTypeActive=$QOS_INTF_WAN_ETH_0;
		if [ $QUEUE_METHOD -eq 1 -o $QUEUE_METHOD -eq 5 ]; then
			eval iftype='$'wanip_$1_ifType
      				. /etc/rc.d/get_wan_if $1 "ip"  
	                   	eval iface=${WAN_IFNAME}
				isbriged=0
				eval addrType='$'wanip_$1_addrType
				if [ "$addrType" = "0" ]; then
					isbriged=1
				fi
				iptables -t mangle -nvL POSTROUTING | grep  ${iface}
				if [ $? -ne 0 ]; then
					if [ $isbriged -ne 1 ]; then
       					iptables -t mangle -A POSTROUTING -o ${iface} -j IMQ --todev 0
					else
       					iptables -t mangle -A POSTROUTING -m physdev --physdev-out ${iface} -j IMQ --todev 0
					fi
				fi
		fi
		;;
	2)
		#wan mode is MII1
		qIfTypeActive=$QOS_INTF_WAN_ETH_1;
		if [ $QUEUE_METHOD -eq 1 -o $QUEUE_METHOD -eq 5 ]; then
			eval iftype='$'wanip_$1_ifType
      				. /etc/rc.d/get_wan_if $1 "ip"
	                   	eval iface=${WAN_IFNAME}
				isbriged=0
				eval addrType='$'wanip_$1_addrType
				if [ "$addrType" = "0" ]; then
					isbriged=1
				fi
				iptables -t mangle -nvL POSTROUTING | grep  ${iface}
				if [ $? -ne 0 ]; then
					if [ $isbriged -ne 1 ]; then
       					iptables -t mangle -A POSTROUTING -o ${iface} -j IMQ --todev 0
					else
       					iptables -t mangle -A POSTROUTING -m physdev --physdev-out ${iface} -j IMQ --todev 0
					fi
				fi
		fi
		;;
	3)
		#wan mode is PTM
		qIfTypeActive=$QOS_INTF_WAN_PTM;
		if [ $QUEUE_METHOD -eq 1 -o $QUEUE_METHOD -eq 5 ]; then
			eval iftype='$'wanip_$1_ifType
      				. /etc/rc.d/get_wan_if $1 "ip"
	                   	eval iface=${WAN_IFNAME}
				isbriged=0
				eval addrType='$'wanip_$1_addrType
				if [ "$addrType" = "0" ]; then
					isbriged=1
				fi
				iptables -t mangle -nvL POSTROUTING | grep  ${iface}
				if [ $? -ne 0 ]; then
					if [ $isbriged -ne 1 ]; then
       					iptables -t mangle -A POSTROUTING -o ${iface} -j IMQ --todev 0
					else
       					iptables -t mangle -A POSTROUTING -m physdev --physdev-out ${iface} -j IMQ --todev 0
					fi
				fi
		fi
		;;
esac


fi

if [ "$g_wan_phy_mode" = "0" ]; then
if [ $qm_enable -eq "1" ]; then

	#$1 has wan index. parse for wan_$1_mode and if mii0 mode, add vconfig rule for eth0.x
	wan_index=$1
	eval qActive='$'qm_qIf
	#eval wan_conn_vcc='$'wanip_${wan_index}_vcc
	if [ "$VCC_SETTING" = "$qActive" ]; then
		queuecfg -f $VCC_SETTING
		queuecfg -i $VCC_SETTING
	fi
fi
fi

# start script to capture wan packet counters continously
eval any_wan=`/usr/sbin/status_oper GET AnyWan status`
if [ "A$any_wan" == "A1" ]; then
	/flash/get_wan_pkt_cnt.sh &
fi
