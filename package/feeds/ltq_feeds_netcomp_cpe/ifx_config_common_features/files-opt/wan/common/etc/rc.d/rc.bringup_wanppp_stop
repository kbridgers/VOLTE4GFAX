#!/bin/sh
# 000001:tc.chen 2005/06/07 add 802.1p and ip ptos support. rewrite all of the qos scirpts
OUTPUT="/tmp/ppp_stop${1}"
flush_output()
{
	echo "" > "$OUTPUT"
}
remove_output()
{
	rm -f "$OUTPUT"
}
SED="/bin/sed"

if [ ! "$ENVLOADED" ]; then
	if [ -r /etc/rc.conf ]; then
		 . /etc/rc.conf 2> /dev/null
		ENVLOADED="1"
	fi
fi

if [ ! "$CONFIGLOADED" ]; then
	if [ -r /etc/rc.d/config.sh ]; then
		. /etc/rc.d/config.sh 2>/dev/null
		CONFIGLOADED="1"
	fi
fi

. /etc/rc.d/ltq_switch_functions.sh 2>/dev/null

#if [ $CONFIG_FEATURE_ALGS -a $CONFIG_FEATURE_ALGS = "1" ]; then
#	CONFIG_PACKAGE_IPTABLES="1"
#elif [ $CONFIG_FEATURE_FIREWALL -a $CONFIG_FEATURE_FIREWALL = "1" ]; then
#	CONFIG_PACKAGE_IPTABLES="1"
#elif [ $CONFIG_FEATURE_NAPT -a $CONFIG_FEATURE_NAPT = "1" ]; then
#	CONFIG_PACKAGE_IPTABLES="1"
#fi

RESOLV_CONF="/etc/resolv.conf"

eval wan_mode='$'wanppp_${1}_wanMode

#eval g_wan_phy_mode='$'wanphy_phymode
#eval g_wan_tc_mode='$'wanphy_tc

startFlag=1
cwan_stopped=0
#if [ "$g_wan_phy_mode" = "0" -a "$g_wan_tc_mode" = "0" ]; then # ADSL and ATM
#	if [ "$wan_mode" = "0" ]; then # ATM
#		startFlag=1
#	fi
#elif [ "$g_wan_phy_mode" = "0" -o "$g_wan_phy_mode" = "3" ]; then # ADSL and PTM
#	if [ "$g_wan_tc_mode" = "1" ]; then
#		if [ "$wan_mode" = "3" -o "$wan_mode" = "4" ]; then # PTM
#			startFlag=1
#		fi
#	fi
#elif [ "$g_wan_phy_mode" = "1" ]; then
#	if [ "$wan_mode" = "1" ]; then # Eth on MII0
#		startFlag=1
#	fi
#elif [ "$g_wan_phy_mode" = "2" ]; then
#	if [ "$wan_mode" = "2" ]; then # Eth on MII1
#		startFlag=1
#	fi
#elif [ "$g_wan_phy_mode" = "5" ]; then # WWAN phymode.
	if [ "$wan_mode" = "6" ]; then
		. /etc/init.d/wwan_pppd.sh stop
		cwan_stopped=1
	fi
#fi

if [ "$CONFIG_FEATURE_DUAL_WAN_SUPPORT" = "1" -a "$dw_failover_state" = "1" ]; then
	startFlag=0
	if [ "$wan_mode" = "6" ]; then
		if [ "$cwan_stopped" = "0" ]; then
			. /etc/init.d/wwan_pppd.sh stop
		fi
	else
		startFlag=1
	fi
fi


if [ "$startFlag" = "1" ]; then

eval link_type='$'wanppp_${1}_linkType
eval wan_iface='$'wanppp_${1}_iface
eval wanppp_pcpeId='$'wanppp_${1}_pcpeId

if [ "$link_type" = "3" ]; then # PPPoA
	wan_type="PPPOA"
elif [ "$link_type" = "4" ]; then # PPPoE
	wan_type="PPPOE"
else
	wan_type="unknown"
fi

#if [ "$wan_mode" != "1" -a "$wan_mode" != "2" ]; then # Not WAN ETH Mode
#	i=0
#	while [ $i -lt $adsl_vcchannel_Count ]; do
#		eval adsl_ch_pcpeId='$'VCChannel_${i}_pcpeId
#		if [ "A$adsl_ch_pcpeId" = "A$wanppp_pcpeId" ]; then
#			eval VCC_SETTING='$'VCChannel_${i}_vcc
#			eval encap='$'VCChannel_${i}_encap
#			eval qos_mode='$'VCChannel_${i}_qos
#			eval maxpcr='$'VCChannel_${i}_maxpcr
#			eval minpcr='$'VCChannel_${i}_minpcr
#			eval cdv='$'VCChannel_${i}_cdv
#			eval mbs='$'VCChannel_${i}_mbs
#			eval scr='$'VCChannel_${i}_scr
#			eval VCC_SETTING='$encap\_'$VCC_SETTING'_$qos_mode'
#			if [ -n "$maxpcr" ]; then
#				eval VCC_SETTING=$VCC_SETTING',max_pcr='$maxpcr
#			fi
#			if [ -n "$minpcr" ]; then
#				eval VCC_SETTING=$VCC_SETTING',min_pcr='$minpcr
#			fi
#			if [ -n "$scr" ]; then
#				eval VCC_SETTING=$VCC_SETTING',scr='$scr
#			fi
#			if [ -n "$mbs" ]; then
#				eval VCC_SETTING=$VCC_SETTING',mbs='$mbs
#			fi
#			if [ -n "$cdv" ]; then
#				eval VCC_SETTING=$VCC_SETTING',cdv='$cdv
#			fi
#			break
#		fi
#		i=`expr $i + 1`
#	done
#fi


if [ "`/usr/sbin/status_oper GET bringup_wanppp${1}_if status`" = "start" ]; then 
#stop(){

	#eval nat_enable='$'wanppp_${1}_NATEnable

	# Fix DNS resolv issue for board initiated WAN domain connections
	#if  [ "$wan_type" != "BRIDGE" ]; then
	#	echo -n > $RESOLV_CONF
	#fi

    # call mgmt.sh for web mgmt traffic prioritization
	if [ "$WAN_TYPE" != "unknown" ]; then
        if [ -n "${WEB_WAN_ENABLE}" -a "${WEB_WAN_ENABLE}" = "1" ]; then
           WAN_IP="`/usr/sbin/status_oper GET WanPPP${1}_IF_Info IP`"
           . /etc/rc.d/mgmt.sh stop 0 ${WAN_IP} 80 tcp
           . /etc/rc.d/mgmt.sh stop 0 ${WAN_IP} 443 tcp
        fi
    fi

	# WAN Interface Setup
	case $wan_type in
	[Pp][Pp][Pp][Oo][Ee])
		#AMS
		if [ "$CONFIG_PACKAGE_KMOD_IPV6" = "1"  -a  "$ipv6_status" = "1" ]; then
			. /etc/rc.d/create_and_run_dhcp6c_cfg radvdstop $wan_iface $1 "ppp"
			sleep 1
			. /etc/rc.d/create_and_run_dhcp6c_cfg stop $wan_iface $1 "ppp"
			sleep 2
		fi

		. /etc/rc.d/init.d/pppoe stop $1

		if [ "$CONFIG_PACKAGE_KMOD_IPV6" = "1"  -a  "$ipv6_status" = "1" ]; then
			sleep 1
			. /etc/rc.d/create_and_run_dhcp6c_cfg radvdstart $wan_iface $1 "ppp"
		fi

		;;
	[Pp][Pp][Pp][Oo][Aa])
		. /etc/rc.d/init.d/pppoa stop $1
		# To disable PPPoA switch configuration
		disable_pppoa_conf
		;;
	[Tt][Rr][0][3][78])
		. /tmp/pvc_record
		if [ TR037_PROTO = "PPPOA" ]; then
			killall -9 pppd
		fi 
		if [ TR037_PROTO = "BR2684" ]; then
			killall -9 br2684ctl
		fi 
		if [ TR037_PROTO = "CLIP" ]; then
			killall -9 atmarpd
		fi 
		/etc/rc.d/killproc ilmid
		;;
	*)
		echo "Unknown WAN Type!"
		WAN_TYPE="unknown"
		;;
	esac
	if [ "$WAN_TYPE" != "unknown" ]; then
		/usr/sbin/status_oper SET bringup_wanppp$1_if status stop
		/usr/sbin/status_oper SET WanPPP${1}_IF_Info STATUS UNCONFIGURED
		#/usr/sbin/status_oper SET VCChannel${i}_Info VCC "$adsl_vcc" STATUS DISCONNECTED
		#i=`expr $i + 1`
	    if [ "$CONFIG_PACKAGE_IFX_OAM" = "1" ]; then
			if [ "$OAM_ENABLE" = "1" ]; then
 	       . /etc/init.d/oam stop $1
   		fi
		if [ "$wan_type" = "BRIDGE" ]; then
		# Start DNS Relay Daemon
		if  [ "$CONFIG_FEATURE_DNS_RELAY" = "1" ]; then
			. /etc/rc.d/init.d/dns_relay restart $1
		fi
	fi
	fi
fi
fi

remove_output
#}
fi

#IPQOS part:
#disable iptable rule to attach eth0.x to imq when eth interface is deleted in mii0 mode
if [ $qm_enable -eq "1" ]; then

# Add Interface classification Rule
. /etc/rc.d/get_wan_if $1 "ppp"
eval iface=${WAN_IFNAME}

ebtables -t broute -L INPUT_INTF_CHECK | grep ${iface}
if [ $? -eq 0 ]; then
	ebtables -t broute -D INPUT_INTF_CHECK -i ${iface} -j ACCEPT
fi

QUEUE_METHOD=`/usr/sbin/status_oper GET qos_bk queue_method`
eval wanmode='$'wanppp_$1_wanMode
case "$wanphy_phymode" in
	0)
		case "$wanphy_tc" in
			0)
				#wan mode is ATM
				qIfTypeActive=$QOS_INTF_WAN_ATM;
				if [ $QUEUE_METHOD -eq 1 -o $QUEUE_METHOD -eq 5 ]; then
						eval iftype='$'wanppp_$1_ifType
          				. /etc/rc.d/get_wan_if $1 "ppp"
	                   	eval iface=${WAN_IFNAME}
      					iptables -t mangle -nvL POSTROUTING | grep  ${iface}
						if [ $? -eq 0 ]; then
       					 		iptables -t mangle -D POSTROUTING -o ${iface} -j IMQ --todev 0
						fi
				fi
				;;
			1)
				#wan mode is PTM
				qIfTypeActive=$QOS_INTF_WAN_PTM;
				if [ $QUEUE_METHOD -eq 1 -o $QUEUE_METHOD -eq 5 ]; then
						eval iftype='$'wanppp_$1_ifType
          				. /etc/rc.d/get_wan_if $1 "ppp"
	                   	eval iface=${WAN_IFNAME}
        					iptables -t mangle -nvL POSTROUTING | grep  ${iface}
						if [ $? -eq 0 ]; then
       					 		iptables -t mangle -D POSTROUTING -o ${iface} -j IMQ --todev 0
						fi
				fi
				;;
		esac
		;;
	1)
		#wan mode is MII0
		qIfTypeActive=$QOS_INTF_WAN_ETH_0;
		if [ $QUEUE_METHOD -eq 1 -o $QUEUE_METHOD -eq 5 ]; then
			eval iftype='$'wanppp_$1_ifType
   				. /etc/rc.d/get_wan_if $1 "ppp"
               	eval iface=${WAN_IFNAME}
				iptables -t mangle -nvL POSTROUTING | grep  ${iface}
				if [ $? -eq 0 ]; then
       					iptables -t mangle -D POSTROUTING -o ${iface} -j IMQ --todev 0
				fi
		fi
		;;
	2)
		#wan mode is MII1
		qIfTypeActive=$QOS_INTF_WAN_ETH_1;
		if [ $QUEUE_METHOD -eq 1 -o $QUEUE_METHOD -eq 5 ]; then
			eval iftype='$'wanppp_$1_ifType
   				. /etc/rc.d/get_wan_if $1 "ppp"
               	eval iface=${WAN_IFNAME}
				iptables -t mangle -nvL POSTROUTING | grep  ${iface}
				if [ $? -eq 0 ]; then
       					iptables -t mangle -D POSTROUTING -o ${iface} -j IMQ --todev 0
				fi
		fi
		;;
	3)
		#wan mode is PTM
		qIfTypeActive=$QOS_INTF_WAN_PTM;
		if [ $QUEUE_METHOD -eq 1 -o $QUEUE_METHOD -eq 5 ]; then
			eval iftype='$'wanppp_$1_ifType
      				. /etc/rc.d/get_wan_if $1 "ppp"
	                   	eval iface=${WAN_IFNAME}
				if [ "$iface" = "br0" ]; then
					eval iface='$'wanppp_${1}_iface
				fi
				iptables -t mangle -nvL POSTROUTING | grep  ${iface}
				if [ $? -eq 0 ]; then
       					iptables -t mangle -D POSTROUTING -o ${iface} -j IMQ --todev 0
				fi
		fi
		;;
esac


fi

# stop script used to capture wan packet counters continously
eval any_wan=`/usr/sbin/status_oper GET AnyWan status`
if [ "A$any_wan" == "A1" ]; then
	killall -9 get_wan_pkt_cnt.sh
fi
