#!/bin/sh -x
# Copyright (C) 2006 OpenWrt.org
export PATH=/bin:/sbin:/usr/bin:/usr/sbin
export TZ="UTC0"

/bin/mount -a

mount_default ()
{
	mount -t ramfs -o nr_inodes=1k,mode=770 /dev/ram /ramdisk
	cp -ar /ramdisk_copy/* /ramdisk
	/bin/mount -t ramfs /dev/ram /dev
	[ -e /etc/device_table.txt ] && /sbin/makedevs -d /etc/device_table.txt /
	/bin/mount -t devpts /dev/pts
}

mount_ubi_sysconfig_vol ()
{
	ubi_sys_mtd="$(grep sysconfig /proc/mtd 2>&- | cut -d: -f1)"
	sys_mtdno="${ubi_sys_mtd:3}"
	[ -z "$ubi_sys_mtd" ] && return 1 || {
		mknod /dev/ubi_ctrl c $(sed 's/:/ /g' /sys/class/misc/ubi_ctrl/dev)
		ubiattach /dev/ubi_ctrl -m $sys_mtdno >&- 2>&- || {
			mtd erase sysconfig
			ubiattach /dev/ubi_ctrl -m $sys_mtdno >&- 2>&- || return 1
		}
		mknod /dev/ubi1 c $(sed 's/:/ /g' /sys/class/ubi/ubi1/dev)
		grep config_vol /proc/mtd >&- 2>&- || {
			ubimkvol /dev/ubi1 -s 256KiB -N config_vol >&- 2>&- || return 1
		}
	}
}

# Require mount path as arg.
mount_ubi_data_vol ()
{
	ubi_data_mtd="$(grep data_vol /proc/mtd 2>&- | cut -d: -f1)"
	data_mtdblock="/dev/mtdblock${ubi_data_mtd:3}"
	data_fs=$(cat /mnt/data/fs)
	[ -z "$ubi_data_mtd" ] && return 1 || {
		[ "$data_fs" = "jffs2" ] && {
			mount -t jffs2 $data_mtdblock "$1" 2>&-
			[ $? -eq 0 ] && return 0 || {
				umount "$1" 2>&-
				/usr/sbin/flash_eraseall -j /dev/$ubi_data_mtd 2>&-
				mount -t jffs2 $data_mtdblock "$1" 2>&-
				[ $? -eq 0 ] && return 0 || return 1
			}
		} || {
			[ "$data_fs" = "ubifs" ] && {
				mount -t ubifs ubi0:data_vol "$1" 2>&-
				[ $? -eq 0 ] && return 0 || {
					umount "$1" 2>&-
					/usr/sbin/flash_eraseall /dev/$ubi_data_mtd 2>&-
					mount -t ubifs ubi0:data_vol "$1" 2>&-
					[ $? -eq 0 ] && return 0 || return 1
				}
			}
		}
	}
}

mount_ubi_overlay ()
{
	/bin/mount -t ramfs /dev/ram /dev
	[ -e /etc/device_table.txt ] && /sbin/makedevs -d /etc/device_table.txt /
	mount_ubi_data_vol /overlay && {
		mount -t mini_fo -o base=/,sto=/overlay "mini_fo:/overlay" /mnt 2>&- && root=/mnt
		mount -o move /proc /mnt/proc && \
			pivot_root /mnt /mnt/rom && {
			mount -o move /rom/dev /dev
			mount -o move /rom/sys /sys 2>&-
			mount -o move /rom/overlay /overlay 2>&-
		}
	}
	/bin/mount -t devpts /dev/pts
	mount -t ramfs -o nr_inodes=1k,mode=770 /dev/ram /ramdisk
	cp -ar /ramdisk_copy/* /ramdisk
	mount_ubi_sysconfig_vol || echo "Failed to mount ubi_sysconfig"
}

grep "ubi.mtd" /proc/cmdline >&- 2>&-
[ $? -eq 0 ] && {
	grep -w do_overlay /proc/cmdline >&- 2>&-
	[ $? -eq 0 ] && mount_ubi_overlay || {
		mount_default
		mount_ubi_sysconfig_vol || echo "Failed to mount ubi_sysconfig"
		mount_ubi_data_vol /mnt/data || echo "Failed to mount data_vol"
	}
} || mount_default

exec /sbin/init 1>/dev/console 2>/dev/console
