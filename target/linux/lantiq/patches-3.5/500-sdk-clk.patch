--- a/arch/mips/lantiq/falcon/sysctrl.c
+++ b/arch/mips/lantiq/falcon/sysctrl.c
@@ -259,3 +259,44 @@ void __init ltq_soc_init(void)
 	clkdev_add_sys("1e100C00.serial", SYSCTL_SYS1, ACTS_ASC1_ACT);
 	clkdev_add_sys("1e200000.i2c", SYSCTL_SYS1, ACTS_I2C_ACT);
 }
+
+
+/*
+ * for compatibility to external drivers from Lantiq
+ * see arch/mips/include/asm/mach-lantiq/falcon/sysctrl.h
+ */
+
+void ltq_sysctl_activate(int module, unsigned int mask)
+{
+	struct clk clk = { .module = module, .bits = mask };
+	sysctl_activate(&clk);
+}
+EXPORT_SYMBOL(ltq_sysctl_activate);
+
+void ltq_sysctl_deactivate(int module, unsigned int mask)
+{
+	struct clk clk = { .module = module, .bits = mask };
+	sysctl_deactivate(&clk);
+}
+EXPORT_SYMBOL(ltq_sysctl_deactivate);
+
+void ltq_sysctl_clken(int module, unsigned int mask)
+{
+	struct clk clk = { .module = module, .bits = mask };
+	sysctl_clken(&clk);
+}
+EXPORT_SYMBOL(ltq_sysctl_clken);
+
+void ltq_sysctl_clkdis(int module, unsigned int mask)
+{
+	struct clk clk = { .module = module, .bits = mask };
+	sysctl_clkdis(&clk);
+}
+EXPORT_SYMBOL(ltq_sysctl_clkdis);
+
+void ltq_sysctl_reboot(int module, unsigned int mask)
+{
+	struct clk clk = { .module = module, .bits = mask };
+	sysctl_reboot(&clk);
+}
+EXPORT_SYMBOL(ltq_sysctl_reboot);
--- a/arch/mips/include/asm/mach-lantiq/falcon/lantiq_soc.h
+++ b/arch/mips/include/asm/mach-lantiq/falcon/lantiq_soc.h
@@ -41,6 +41,11 @@
 #define SYSCTL_SYS1		0
 #define SYSCTL_SYSETH		1
 #define SYSCTL_SYSGPE		2
+extern void ltq_sysctl_activate(int module, unsigned int mask);
+extern void ltq_sysctl_deactivate(int module, unsigned int mask);
+extern void ltq_sysctl_clken(int module, unsigned int mask);
+extern void ltq_sysctl_clkdis(int module, unsigned int mask);
+extern void ltq_sysctl_reboot(int module, unsigned int mask);
 
 /* BOOT_SEL - find what boot media we have */
 #define BS_FLASH		0x1
